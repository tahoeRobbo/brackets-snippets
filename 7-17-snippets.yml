- trigger: cl
  scope: javascript
  description: console.log
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        console.log(${1:obj});${2}

- trigger: cd
  scope: javascript
  description: console.dir
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        console.dir(${1:obj});${2}

- trigger: ce
  scope: javascript
  description: console.error
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        console.error(${1:obj});${2}

- trigger: cll
  scope: javascript
  description: console.log
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        console.log('${1:obj}:', ${1:obj});${2}

- trigger: cdd
  scope: javascript
  description: console.dir
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        console.dir('${1:obj}:', ${1:obj});${2}

- trigger: cee
  scope: javascript
  description: console.error
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        console.error('${1:obj}:', ${1:obj});${2}

- trigger: ae
  scope: javascript
  description: document.addEventListener
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.addEventListener('${2:event}', function(e) {
          ${3}
        });

- trigger: ac
  scope: javascript
  description: document.appendChild
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.appendChild(${2:elem});${3}

- trigger: rc
  scope: javascript
  description: document.removeChild
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.removeChild(${2:elem});${3}

- trigger: cel
  scope: javascript
  description: document.createElement
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.createElement(${2:elem});${3}

- trigger: gi
  scope: javascript
  description: document.getElementById
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.getElementById('${2:id}');${3}

- trigger: gc
  scope: javascript
  description: document.getElementsByClassName
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.getElementsByClassName('${2:class}');${3}

- trigger: gt
  scope: javascript
  description: document.getElementsByTagName
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.getElementsByTagName('${2:tag}');${3}

- trigger: qs
  scope: javascript
  description: document.querySelector
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.querySelector('${2:selector}');${3}

- trigger: qsa
  scope: javascript
  description: document.querySelectorAll
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:document}.querySelectorAll('${2:selector}');${3}

- trigger: fe
  scope: javascript
  description: forEach
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:myArray}.forEach(function (${2:elem}) {
          ${3}
        });

- trigger: fi
  scope: javascript
  description: for in
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        for (${1:prop} in ${2:obj}) {
          if (${2:obj}.hasOwnProperty(${1:prop})) {
            ${3}
          }
        }

- trigger: fn
  scope: javascript
  description: function
  tag: VanillaJS
  tagHide: true
  source: system
  mTime: 1468779638230
  text: |
        function ${1:methodName}(${2:arguments}) {
          ${3}
        }

- trigger: afn
  scope: javascript
  description: anonymous function
  tag: VanillaJS
  tagHide: true
  source: system
  mTime: 1468797657447
  text: |
        function(${1:arguments}) {
          ${2}
        }

- trigger: pr
  scope: javascript
  description: prototype
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        ${1:ClassName}.prototype.${2:methodName} = function (${3:arguments}) {
          ${4}
        };

- trigger: sw
  scope: javascript
  description: switch statement
  tag: VanillaJS
  tagHide: true
  source: system
  mTime: 1468799655072
  text: |
        switch(${1:expression}) {
            case ${2:value}: {
                ${3}
                break;
            }
            default: {
                break;
            }
        }

- trigger: si
  scope: javascript
  description: setInterval
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        setInterval(function() {
          ${2}
        }, ${1:delay});

- trigger: st
  scope: javascript
  description: setTimeout
  tag: VanillaJS
  tagHide: true
  source: system
  text: |
        setTimeout(function() {
          ${2}
        }, ${1:delay});

- trigger: iife
  description: Iffe wrapper
  scope: javascript
  mTime: 1468778290839
  text: |
        (function(){
            ${1}
        })();

- trigger: fac
  description: Angular Factory in JP Style
  scope: javascript
  mTime: 1468798512804
  text: |
        // ${2:FactoryName}.js
        
        (function(){
            'use strict';
        
            angular
                .module('${1:AppName}')
                .factory('${2:FactoryName}', ${2:FactoryName});
                
            ${2:FactoryName}.$inject = [${3:DEPENDENCIES}];
        
            function ${2:FactoryName}(${3:DEPENDENCIES}) {
                
            }
        })();
        

- trigger: fl
  description: For loop based on array length
  scope: javascript
  mTime: 1468795816905
  text: |
        for (var ${1:i} = 0, len = ${2:array}.length; ${1:i} < len; ${1:i}++) {
            ${3}
        }

- trigger: lfn
  description: Let Arrow Function
  scope: javascript
  mTime: 1468797119195
  text: |
        let ${1:fnName} = (${2:args}) => ${3};

- trigger: fll
  description: for loop using let
  scope: javascript
  mTime: 1468797173804
  text: |
        for (let ${1:i} = 0, len = ${2:array}.length; ${1:i} < len; ${1:i}++) {
            ${3}
        }

- trigger: cfn
  description: const arrow function
  scope: javascript
  mTime: 1468797242741
  text: |
        const ${1:fnName} = (${2:args}) => ${3};

- trigger: ctrl
  description: Angular Controller in JP Style
  scope: javascript
  mTime: 1468798479197
  text: |
        // ${2:ControllerName}.js
        
        (function(){
            'use strict';
        
            angular
                .module('${1:AppName}')
                .factory('${2:ControllerName}', ${2:ControllerName});
                
            ${2:ControllerName}.$inject = [${3:DEPENDENCIES}];
        
            function ${2:ControllerName}(${3:DEPENDENCIES}) {
                var vm = this;
        
                
            }
        })();
        

- trigger: if
  description: if block
  scope: javascript
  mTime: 1468798672316
  text: |
        if (${1:condition}) {
            ${2}
        }

- trigger: else
  description: else block
  scope: javascript
  mTime: 1468798750967
  text: |
        else {
            ${1}
        }

- trigger: case
  description: case block
  scope: javascript
  mTime: 1468799644689
  text: |
        case ${1:value}: {
            ${2}
            break;
        }

- scope: javascript
  trigger: tern
  description: ternary operator
  mTime: 1468800484263
  text: |
        (${1:evaulation}) ? ${2:true} : ${3:false};

- description: Create a new object
  scope: javascript
  trigger: o
  mTime: 1468824737673
  text: |
        {
            ${1}: ${2}
        };

- trigger: op
  description: item in an object
  scope: javascript
  mTime: 1468824601918
  text: |
        ${1}: ${2}

